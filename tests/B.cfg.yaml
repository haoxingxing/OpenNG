version: 2
Startup:
  - version

  # Init Auth mod
  - auth = NewLoginMgr()
  - auth.AddPolicy("PublicZone",["(.*)"],"All") #cc72
  - auth.AddUser("test","******",["$all"])
  - auth.DelUser("test")
  - auth.GetPolicies()
  # Init http mod
  - hmw = NewHttpMidware("http")
  - hbasic = NewHTTPBasicMod()
  - hnotfound = NewHTTPNotFoundMod()
  - proxy = NewHTTPProxier()

  - proxy.Add("router",["localhost:23333","router.b"],"http://10.1.1.1")

  - hmw.Bind(hbasic,"Basic")
  - hmw.Bind(proxy,"Proxy")
  - hmw.Bind(hnotfound,"NotFound")

  - SetupQuic(hmw,"0.0.0.0:23333")

  # Init tcp mod
  - goaway = NewTCPGoAway()
  - bytecounter = NewTCPByteCounter()
  - rdtls = NewTCPRedirectToTls()
  - tls = NewTCPTlsHandler()
  - pphl = NewTCPProxyProtocolHandler()
  - detector = NewTCPDetector()

  - ctl = NewController("main")

  - tcproxy = NewTcpProxier()
  - tcproxy.Add("ssh","10.1.1.25:32222","SSH")

  - ctl.AddService("HMW",hmw)
  - ctl.AddService("GOAWAY",goaway)
  - ctl.AddService("RDTLS",rdtls)
  - ctl.AddService("PPHL",pphl)
  - ctl.AddService("TSL",tls)
  - ctl.AddService("BYTC",bytecounter)
  - ctl.AddService("TCPROXY",tcproxy)
  - ctl.AddService("DETECT",detector)

  - ctl.Bind("PROXY TLS",["$TSL","$DETECT"]) 
  - ctl.Bind("PROXY TLS HTTP2",["$HMW"])
  - ctl.Bind("",["$BYTC","$DETECT"]) 
  - ctl.Bind("TLS HTTP2",["$HMW","$FQ"])
  - ctl.Bind("PROXY TLS HTTP1",["$HMW"])
  - ctl.Bind("UNKNOWN",["$GOAWAY"])
  - ctl.Bind("PROXY UNKNOWN",["$GOAWAY"])
  - ctl.Bind("TLS",["$TSL","$DETECT"])
  - ctl.Bind("PROXY",["$PPHL","$DETECT"])
  - ctl.Bind("HTTP1",["$RDTLS"])
  - ctl.Bind("TLS HTTP1",["$HMW"])
  - ctl.Bind("SSH",["$TCPROXY"])
  - ctl.Bind("RDP",["$KNOCK","$TCPROXY"])
  - ctl.Bind("PROXY HTTP1",["$RDTLS"])

  - ctl.Listen("0.0.0.0:23333")
  
  - uptime
  - wait(60)
